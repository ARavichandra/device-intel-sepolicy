# evs_mock mock hardware driver service
type hal_evs_driver, domain, coredomain;
hal_server_domain(hal_evs_driver, hal_evs)
hal_client_domain(hal_evs_driver, hal_evs)

# allow init to launch processes in this context
type hal_evs_driver_exec, exec_type, file_type, system_file_type;
binder_service(hal_evs_driver)
binder_call(hal_evs_driver, hal_graphics_allocator_default)
binder_call(hal_evs_driver, hal_graphics_composer_default)
binder_call(hal_evs_driver, evs_manager)
binder_call(hal_evs_driver, surfaceflinger)
binder_call(hal_evs_driver, hal_configstore_default)
binder_call(hal_evs_driver, mediaserver)
init_daemon_domain(hal_evs_driver)
binder_use(hal_evs_driver)

# Allow use of USB devices, gralloc buffers, and surface flinger
allow hal_evs_driver device:dir { open read };
allow hal_evs_driver gpu_device:dir r_dir_perms;
allow hal_evs_driver gpu_device:file rw_file_perms;
allow hal_evs_driver video_device:chr_file rw_file_perms;
hal_client_domain(hal_evs_driver, hal_graphics_allocator);
hal_client_domain(hal_evs_driver, hal_graphics_composer)
hal_client_domain(hal_evs_driver, hal_configstore)
allow hal_evs_driver hal_graphics_allocator_default_tmpfs:file { read write map };
allow hal_evs_driver hal_graphics_mapper_hwservice:hwservice_manager find;
allow hal_evs_driver hal_graphics_composer_default:fd use;
allow hal_graphics_composer_default hal_evs_driver:fd use;
allow hal_evs_driver hwservicemanager:chr_file rw_file_perms;
allow hal_evs_driver sysfs_app_readable:file r_file_perms;
allow hal_evs_driver rootfs:file { r_file_perms execute };
allow hal_evs_driver system_file:dir r_dir_perms;
allow hal_evs_driver gpu_device:chr_file rw_file_perms;
allow hal_evs_driver self:capability sys_nice;
allow hal_evs_driver mediaserver_service:service_manager find;
binder_call(hal_evs_driver, surfaceflinger);
binder_call(hal_evs_driver, priv_app)
binder_call(hal_evs_driver, system_app)
allow hal_evs_driver surfaceflinger_service:service_manager find;
allow hal_evs_driver ion_device:chr_file r_file_perms;

binder_call(hal_evs_driver, priv_app)
binder_call(hal_evs_driver, system_app)

# Allow the driver to access kobject uevents
allow hal_evs_driver self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;
